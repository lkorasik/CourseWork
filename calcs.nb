(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     33204,        686]
NotebookOptionsPosition[     32639,        667]
NotebookOutlinePosition[     33118,        685]
CellTagsIndexPosition[     33075,        682]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "0.597"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a_", ",", " ", "x_"}], "]"}], "=", 
   RowBox[{"a", "*", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"b_", ",", " ", "x_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "+", "x"}], ")"}], "^", "6"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"answer", " ", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "x"}], "]"}]}], "}"}], "/.", " ", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", ",", "x"}], "]"}], "==", 
       RowBox[{"g", "[", 
        RowBox[{"b", ",", "x"}], "]"}]}], ",", " ", "x", ",", "Reals"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fg", "=", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "x"}], "]"}], ",", " ", 
      RowBox[{"g", "[", 
       RowBox[{"b", ",", " ", "x"}], "]"}]}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "*", "x"}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", "x"}], ")"}], "^", "6"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.02"}], ",", " ", "0.21"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.02"}], ",", " ", "0.21"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", " ", "Blue"}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "Large"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", 
         RowBox[{"Point", "[", "answer", "]"}]}], "}"}]}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<x\>\"", ",", " ", "Bold", ",", "20"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<y\>\"", ",", "Bold", ",", "20"}], "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TicksStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "->", "16"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\user\\\\Desktop\\\\a.svg\>\"", ",", " ", "fg"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\user\\\\Desktop\\\\big.svg\>\"", ",", "fg", ",", 
      RowBox[{"ImageSize", "->", "2000"}], ",", 
      RowBox[{"\"\<CompressionLevel\>\"", "->", "0"}]}], "]"}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz30slAEcB/BzqybZ1R/StZnkPLNqmdWGsJ2L0wtuqHuGkZy7S8glOWad
u0o3kZe2Rhwq03m5Enb3SLhdZeSSLi9ho9jqzCa0SqfVdN/nj98+2/ef7/e3
XySLlTAZDEag/eC+BPntoNZl3pijfylcj+rWwG7PZdo9BdsbYXuGUQvnp6va
YGUZZYFNH61TMCCz7iv8+UG3ROe2M7+gb75wR7Ddvt+FtKyCECOUZB18DT2S
Ox3P21XJ/d2hk99LDrTEDfjAkmj2Uei+tBkEZ9nvuVC60xQOr5JzETC+gx8J
yzvqo6GZNR8Dw7h6Eo7WhiXD56IKMXQZyCmEIZvqG3R/a6UaSq6zymCAKq0C
kuI1RQp2ty8rIdUgLILkZE41lNdWNUDd4t9GeEix1gwNznF6mMCU9UBmSpIR
fiFcB+En1swbqBdYZ+BgVvQcbCizrsLUNvEa7Mt6vEtkV2Pud4EFhkV3aPY5
TsBsKXEEnl2YOAaVxQQPvugkaYOCuVIYayNpV+6GXYLTeQeyYaWSyIeJXfdp
fTm1SuhQcu0mjPe2lMJCsaAc8r111fCVi6kOhlSdaoTayCLaQNUD14v465HG
DV6pCU6FbfzhdPhZScpg7lNpLoyTC29B7XioGvYqFkrgSDGrAnI4zTXQyE58
CN92WZugp3L0CSx+t80Ao4byKNjCWO+Hzj3UAGRGNA1Drw3LONxygbsCz50W
bMBw4b1/kOqlPNLtuhkyCFiXMekHCcU3Loy5MxEKi8xpJ6Fat0rbYsuMgk7s
oSSY4KlNgXt5P0Twsj6UgqaxJdo/av4g5AlO0HptdRiBK9+f0crkh6fgLLF7
Gv4HlKvqtQ==
  "],
 CellLabel->
  "In[1019]:=",ExpressionUUID->"33892845-d30e-4b35-948b-fffdeaf03e03"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]], 
         LineBox[{{-0.019999999999999997`, -0.02}, {-0.01991217886741602, \
-0.01991217886741602}, {0.01900391033155799, 0.01900391033155799}, {
          0.06122210971165424, 0.06122210971165424}, {0.10061997029328089`, 
          0.10061997029328089`}, {0.14331994105602977`, 
          0.14331994105602977`}, {0.18524038934683965`, 
          0.18524038934683965`}, {0.21, 0.21}}]}, 
        Annotation[#, "Charting`Private`Tag$56751#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
xQ==
          "]]}, Annotation[#, "Charting`Private`Tag$56751#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox["\"x\"", Bold, 20, StripOnInput -> False], TraditionalForm], 
       FormBox[
        StyleBox["\"y\"", Bold, 20, StripOnInput -> False], TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.02, 0.21}, {-0.02, 0.21}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 16]}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Alpha]", " ", 
         TagBox["x", HoldForm]}], 
       SuperscriptBox[
        RowBox[{"(", 
          RowBox[{"\[Beta]", "+", 
            TagBox["x", HoldForm]}], ")"}], "6"]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84691893596487*^9, 3.8469192035699387`*^9, {3.8469196027268105`*^9, 
   3.8469196077830954`*^9}, 3.8469197316189766`*^9, 3.8469198274176893`*^9, {
   3.846919866540514*^9, 3.846919873231288*^9}},
 CellLabel->
  "Out[1024]=",ExpressionUUID->"db45e57c-53af-459a-b606-17ee0222a532"]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>0.9 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"075d0955-9bbf-4bdb-a497-442848bc938e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4479, 123, 460, "Input",ExpressionUUID->"33892845-d30e-4b35-948b-fffdeaf03e03"],
Cell[5062, 147, 27561, 517, 380, "Output",ExpressionUUID->"db45e57c-53af-459a-b606-17ee0222a532"]
}, Open  ]]
}
]
*)

