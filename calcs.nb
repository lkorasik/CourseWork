(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     31944,        638]
NotebookOptionsPosition[     31366,        620]
NotebookOutlinePosition[     31764,        636]
CellTagsIndexPosition[     31721,        633]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a_", ",", " ", "x_"}], "]"}], "=", 
   RowBox[{"a", "*", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"b_", ",", " ", "x_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "+", "x"}], ")"}], "^", "6"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fg", "=", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"1", ",", "x"}], "]"}], ",", " ", 
      RowBox[{"g", "[", 
       RowBox[{"0.582355932", ",", " ", "x"}], "]"}]}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "*", "x"}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", "x"}], ")"}], "^", "6"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.04"}], ",", " ", "0.28"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.02"}], ",", " ", "0.22"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", " ", "Blue"}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "->", "Large"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\user\\\\Desktop\\\\fg.jpg\>\"", ",", " ", "fg"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.846822987698501*^9, 3.8468230017198267`*^9}, {
  3.8468231337282667`*^9, 3.8468231353792377`*^9}, {3.8468231842961535`*^9, 
  3.8468232219506445`*^9}, {3.846823252713974*^9, 3.8468235577047806`*^9}, {
  3.8468236152137012`*^9, 3.8468237248882103`*^9}, {3.846823757369379*^9, 
  3.8468238506241016`*^9}, {3.8468240266709213`*^9, 3.846824027967741*^9}, {
  3.8468254580148993`*^9, 3.846825497325976*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"33892845-d30e-4b35-948b-fffdeaf03e03"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0]], 
         LineBox[{{-0.019999999999999997`, -0.02}, {-0.01991217886741602, \
-0.01991217886741602}, {0.01900391033155799, 0.01900391033155799}, {
          0.06122210971165424, 0.06122210971165424}, {0.10061997029328089`, 
          0.10061997029328089`}, {0.14331994105602977`, 
          0.14331994105602977`}, {0.18524038934683965`, 
          0.18524038934683965`}, {0.22, 0.22}}]}, 
        Annotation[#, "Charting`Private`Tag$34776#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$34776#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.04, 0.28}, {-0.02, 0.22}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Alpha]", " ", 
         TagBox["x", HoldForm]}], 
       SuperscriptBox[
        RowBox[{"(", 
          RowBox[{"\[Beta]", "+", 
            TagBox["x", HoldForm]}], ")"}], "6"]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8468230019536824`*^9, {3.8468231632610474`*^9, 3.846823222375656*^9}, {
   3.8468232561678123`*^9, 3.8468233449411554`*^9}, {3.84682339267725*^9, 
   3.8468234524742365`*^9}, {3.846823482681715*^9, 3.8468235581765585`*^9}, {
   3.8468236160710373`*^9, 3.846823720540719*^9}, {3.84682376510486*^9, 
   3.8468237902088585`*^9}, {3.846823822211728*^9, 3.846823851020464*^9}, {
   3.846824023324168*^9, 3.8468240283192673`*^9}, {3.846825482746769*^9, 
   3.8468254984699693`*^9}},
 CellLabel->
  "Out[178]=",ExpressionUUID->"0a0ce477-069e-4ad4-8602-7fd5c62afebd"],

Cell[BoxData["\<\"C:\\\\Users\\\\user\\\\Desktop\\\\fg.jpg\"\>"], "Output",
 CellChangeTimes->{
  3.8468230019536824`*^9, {3.8468231632610474`*^9, 3.846823222375656*^9}, {
   3.8468232561678123`*^9, 3.8468233449411554`*^9}, {3.84682339267725*^9, 
   3.8468234524742365`*^9}, {3.846823482681715*^9, 3.8468235581765585`*^9}, {
   3.8468236160710373`*^9, 3.846823720540719*^9}, {3.84682376510486*^9, 
   3.8468237902088585`*^9}, {3.846823822211728*^9, 3.846823851020464*^9}, {
   3.846824023324168*^9, 3.8468240283192673`*^9}, {3.846825482746769*^9, 
   3.846825498650391*^9}},
 CellLabel->
  "Out[179]=",ExpressionUUID->"f5e5313a-bc3b-40a5-a530-52d97766e33a"]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"075d0955-9bbf-4bdb-a497-442848bc938e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2331, 64, 324, "Input",ExpressionUUID->"33892845-d30e-4b35-948b-fffdeaf03e03"],
Cell[2914, 88, 27776, 517, 376, "Output",ExpressionUUID->"0a0ce477-069e-4ad4-8602-7fd5c62afebd"],
Cell[30693, 607, 657, 10, 81, "Output",ExpressionUUID->"f5e5313a-bc3b-40a5-a530-52d97766e33a"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

